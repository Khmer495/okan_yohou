on:
  pull_request:
    paths:
      - app/cmd/**
      - app/internal/**
      - app/go.mod
      - app/go.sum

env:
  GO_DIR: app

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      is-api-changed: ${{ steps.is_changed.outputs.api }}
      is-batch-begin-new-work-term-changed: ${{ steps.is_changed.outputs.batch-begin-new-work-term }}
      is-batch-notificate-work-term-deadline-changed: ${{ steps.is_changed.outputs.batch-notificate-work-term-deadline }}
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Check files for api are changed
        uses: dorny/paths-filter@v2
        id: is_changed
        with:
          filters: |
            api:
              - app/cmd/api/**
              - app/internal/app/api/**
              - app/internal/pkg/**
              - app/go.mod
              - app/go.sum
            batch-begin-new-work-term:
              - app/cmd/batch/batch-begin-new-work-term/**
              - app/internal/app/batch/batch-begin-new-work-term/**
              - app/internal/pkg/**
              - app/go.mod
              - app/go.sum
            batch-notificate-work-term-deadline:
              - app/cmd/batch/batch-notificate-work-term-deadline/**
              - app/internal/app/batch/batch-notificate-work-term-deadline/**
              - app/internal/pkg/**
              - app/go.mod
              - app/go.sum

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go get
        working-directory: ${{ env.GO_DIR }}
        run: go get -v -t -d ./...

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.29

          # Optional: working directory, useful for monorepos
          working-directory: ${{ env.GO_DIR }}

          # Optional: golangci-lint command line arguments.
          args: --timeout=10m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        working-directory: ${{ env.GO_DIR }}
        run: go test ./... -v

  build-api:
    needs: [setup, lint, test]
    if: ${{ needs.setup.outputs.is-api-changed == 'true' }}
    runs-on: ubuntu-latest
    env:
      APP: api
      VER: v1
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        working-directory: ${{ env.GO_DIR }}
        run: GOARCH=amd64 GOOS=linux go build cmd/${{ env.APP }}/${{ env.VER }}/main.go
